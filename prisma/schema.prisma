// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String   @id @default(cuid())
  email         String   @unique
  name          String?
  companyName   String?
  role          String?  // founder, product_manager, marketer
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  companies     Company[]
  
  @@map("users")
}

model Company {
  id            String   @id @default(cuid())
  name          String
  domain        String
  isCompetitor  Boolean  @default(true)
  userId        String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  user          User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  pages         MonitoredPage[]
  changes       SaasChange[]
  
  @@map("companies")
}

model MonitoredPage {
  id            String   @id @default(cuid())
  companyId     String
  url           String
  pageType      String   // pricing, features, blog, homepage, about
  isActive      Boolean  @default(true)
  checkInterval Int      @default(1440) // in minutes, default daily
  lastChecked   DateTime?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  company       Company      @relation(fields: [companyId], references: [id], onDelete: Cascade)
  changes       SaasChange[]
  
  @@map("monitored_pages")
}

model SaasChange {
  id                    String   @id @default(cuid())
  companyId             String
  pageId                String?
  changeType            String   // pricing, features, messaging, product, integration, other
  changeSummary         String   // specific, actionable summary under 80 chars
  oldValue              String?
  newValue              String?
  impactLevel           String   // high, medium, low
  confidence            String   // high, medium, low
  competitiveAnalysis   String?
  detectedAt            DateTime @default(now())
  
  company               Company       @relation(fields: [companyId], references: [id], onDelete: Cascade)
  page                  MonitoredPage? @relation(fields: [pageId], references: [id], onDelete: Cascade)
  
  @@map("saas_changes")
}